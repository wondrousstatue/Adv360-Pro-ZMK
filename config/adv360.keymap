/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        equalsunder: equalsunder {
            compatible = "zmk,behavior-mod-morph";
            label = "EQUALSUNDER";
            bindings =
                <&kp EQUAL>,
                <&kp UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        periodcolon: periodcolon {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIODCOLON";
            bindings =
                <&kp PERIOD>,
                <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        slashterisk: slashterisk {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASHTERISK";
            bindings =
                <&kp SLASH>,
                <&kp ASTERISK>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        quotedblquest: quotedblquest {
            compatible = "zmk,behavior-mod-morph";
            label = "QUOTEDBLQUEST";
            bindings =
                <&kp DOUBLE_QUOTES>,
                <&kp QUESTION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        quoteeclam: quoteeclam {
            compatible = "zmk,behavior-mod-morph";
            label = "QUOTEECLAM";
            bindings =
                <&kp SINGLE_QUOTE>,
                <&kp EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        commasemicolon: commasemicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMASEMICOLON";
            bindings =
                <&kp COMMA>,
                <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dashplus: dashplus {
            compatible = "zmk,behavior-mod-morph";
            label = "DASHPLUS";
            bindings =
                <&kp MINUS>,
                <&kp PLUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        backdel: backdel {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKDEL";
            bindings =
                <&kp BACKSPACE>,
                <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RCTL|MOD_LCTL)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        q {
            bindings = <&kp Q>;
            key-positions = <58 57>;
        };
    };

    macros {
        dbl0: dbl0 {
            compatible = "zmk,behavior-macro";
            label = "DBL0";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_0 &kp KP_NUMBER_0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none     &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &mo 1                                                       &mo 1     &kp N6           &kp N7        &kp N8        &kp N9          &kp N0       &none
&kp TAB   &kp J   &kp F   &kp M   &kp P   &kp B   &none                                                       &none     &equalsunder     &periodcolon  &slashterisk  &quotedblquest  &quoteeclam  &none
&kp ESC   &kp R   &kp S   &kp N   &kp D   &kp W   &none  &kp LCTRL  &kp LALT            &kp LGUI   &kp RCTRL  &none     &commasemicolon  &kp A         &kp E         &kp I           &kp H        &kp ENTER
&kp CAPS  &kp X   &kp G   &kp V   &kp C   &kp Z                     &mo 2               &mo 3                           &dashplus        &kp U         &kp O         &kp Y           &kp K        &none
&mo 2     &none   &none   &none   &none           &kp L  &kp T      &kp LEFT_SHIFT      &kp RSHFT  &kp SPACE  &backdel                   &none         &none         &none           &none        &mo 2
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_keypad {
            bindings = <
&trans  &trans  &trans           &kp KP_SLASH     &kp KP_MULTIPLY  &kp KP_MINUS  &trans                                      &trans  &trans          &trans        &trans          &trans           &trans  &trans
&trans  &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS   &trans                                      &trans  &trans          &trans        &trans          &trans           &trans  &trans
&trans  &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_EQUAL  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER                  &trans      &trans                  &trans          &trans        &trans          &trans           &trans  &trans
&trans  &trans  &kp KP_NUMBER_0  &dbl0            &trans                         &trans  &trans  &trans      &trans  &trans  &trans                  &trans        &trans          &trans           &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans            &trans             &trans          &trans           &trans  &trans                                      &trans  &trans  &trans                &trans                 &trans         &trans            &trans
&trans  &trans            &trans             &trans          &trans           &trans  &trans                                      &trans  &trans  &kp PIPE              &kp BACKSLASH          &trans         &trans            &trans
&trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN  &kp GREATER_THAN  &trans
&trans  &trans            &trans             &trans          &trans           &trans                  &trans      &trans                  &trans  &trans                &trans                 &trans         &trans            &trans
&trans  &trans            &trans             &trans          &trans                   &trans  &trans  &trans      &trans  &trans  &trans          &trans                &trans                 &trans         &trans            &trans
            >;
        };
    };
};
